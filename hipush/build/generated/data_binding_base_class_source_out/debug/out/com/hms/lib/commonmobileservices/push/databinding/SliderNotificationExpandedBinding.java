// Generated by view binder compiler. Do not edit!
package com.hms.lib.commonmobileservices.push.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.ViewFlipper;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.hms.lib.commonmobileservices.push.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SliderNotificationExpandedBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView btnNotificationExpandedNext;

  @NonNull
  public final ImageView btnNotificationExpandedPrev;

  @NonNull
  public final ViewFlipper flpNotificationExpandedFlipper;

  private SliderNotificationExpandedBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView btnNotificationExpandedNext,
      @NonNull ImageView btnNotificationExpandedPrev,
      @NonNull ViewFlipper flpNotificationExpandedFlipper) {
    this.rootView = rootView;
    this.btnNotificationExpandedNext = btnNotificationExpandedNext;
    this.btnNotificationExpandedPrev = btnNotificationExpandedPrev;
    this.flpNotificationExpandedFlipper = flpNotificationExpandedFlipper;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SliderNotificationExpandedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SliderNotificationExpandedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.slider_notification_expanded, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SliderNotificationExpandedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_notification_expanded_next;
      ImageView btnNotificationExpandedNext = rootView.findViewById(id);
      if (btnNotificationExpandedNext == null) {
        break missingId;
      }

      id = R.id.btn_notification_expanded_prev;
      ImageView btnNotificationExpandedPrev = rootView.findViewById(id);
      if (btnNotificationExpandedPrev == null) {
        break missingId;
      }

      id = R.id.flp_notification_expanded_flipper;
      ViewFlipper flpNotificationExpandedFlipper = rootView.findViewById(id);
      if (flpNotificationExpandedFlipper == null) {
        break missingId;
      }

      return new SliderNotificationExpandedBinding((RelativeLayout) rootView,
          btnNotificationExpandedNext, btnNotificationExpandedPrev, flpNotificationExpandedFlipper);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
